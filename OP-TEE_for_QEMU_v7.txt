# 注意：保证整个过程尽量在同一终端中，VPN或VPS的节点尽量选择韩国或日本
【1】Prerequisites
sudo dpkg --add-architecture i386
sudo apt-get update
sudo apt-get install android-tools-adb android-tools-fastboot autoconf \
	automake bc bison build-essential ccache cscope curl device-tree-compiler \
	expect flex ftp-upload gdisk iasl libattr1-dev libc6:i386 libcap-dev \
	libfdt-dev libftdi-dev libglib2.0-dev libhidapi-dev libncurses5-dev \
	libpixman-1-dev libssl-dev libstdc++6:i386 libtool libz1:i386 make \
	mtools netcat python-crypto python3-crypto python-pyelftools \
	python3-pyelftools python-serial python3-serial \
	rsync unzip uuid-dev xdg-utils xterm xz-utils zlib1g-dev
python3 -m pip install --user pycryptodome
pip3 install pycryptodomex
# 注意：python3 -m pip install --user pycryptodome可能无法为python3正确安装pycryptodome，建议执行pip3 install pycryptodomex命令

【2】Install Android repo
mkdir ~/bin
PATH=~/bin:$PATH # 注意：该PATH环境变量只在运行配置命令的终端中有效
curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
chmod a+x ~/bin/repo
git config --global user.name "QQZAD" # 注意：此处使用自己的用户名
git config --global user.email "2298070398@qq.com" # 注意：此处使用自己的邮箱

【3】Get the source code
mkdir -p qemu-v7-project
cd qemu-v7-project
repo init -u https://github.com/OP-TEE/manifest.git -m default.xml # 注意：该命令需要高速稳定的VPN或VPS，否则会出现各种错误
repo sync -j4 --no-clone-bundle # 注意：该命令需要高速稳定的VPN或VPS，否则会出现各种错误，此命令需要较长时间

【4】Get the toolchains
cd ~/qemu-v7-project/build
make -j2 toolchains # 注意：下载ARM平台的交叉编译器，该命令需要高速稳定的VPN或VPS
# 注意：toolchains的下载地址见qemu-v7-project/build/toolchain.mk
# https://developer.arm.com/-/media/Files/downloads/gnu-a/8.3-2019.03/binrel/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf.tar.xz
# https://developer.arm.com/-/media/Files/downloads/gnu-a/8.3-2019.03/binrel/gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu.tar.xz
# （1）手动下载针对ARM平台的交叉编译器gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf和gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu
# （2）mkdir ~/qemu-v7-project/toolchains
# （3）将gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf和gcc-arm-8.3-2019.03-x86_64-aarch64-linux-gnu放在qemu-v7-project/toolchains下
# （4）修改qemu-v7-project/build/toolchain.mk的内容：
# https://developer.arm.com/-/media/Files/downloads/gnu-a/8.3-2019.03/binrel/${AARCH32_GCC_VERSION}.tar.xz -> file://~/qemu-v7-project/toolchains/${AARCH32_GCC_VERSION}.tar.xz
# https://developer.arm.com/-/media/Files/downloads/gnu-a/8.3-2019.03/binrel/${AARCH64_GCC_VERSION}.tar.xz -> file://~/qemu-v7-project/toolchains/${AARCH64_GCC_VERSION}.tar.xz
# （5）cd ~/qemu-v7-project/build
# （6）make -j2 toolchains
# 将QEMU源代码中的文件夹capstone、dtc、authz和.git/modules全部复制到qemu-v7-project/qemu中

【5】Build the solution
cd ~/qemu-v7-project/build
make -j `nproc` # 注意：该命令需要高速稳定的VPN或VPS，在交叉编译过程中会下载部分文件

【8】Run xtest
在Buildroot中运行xtest命令
# 若配置成功在最后会输出如下信息：
# ...
# +-----------------------------------------------------
# 24785 subtests of which 0 failed
# 102 test cases of which 0 failed
# 0 test cases were skipped
# TEE test application done!
在Buildroot中运行optee_example_hello_world命令
# 若配置成功在最后会输出如下信息：
# D/TC:? 0 tee_ta_init_pseudo_ta_session:284 Lookup pseudo TA 8aaaf200-2450-11e4-abe2-0002a5d5c51b
# D/TC:? 0 load_ldelf:703 ldelf load address 0x40006000
# D/LD:  ldelf:134 Loading TA 8aaaf200-2450-11e4-abe2-0002a5d5c51b
# D/TC:? 0 tee_ta_init_pseudo_ta_session:284 Lookup pseudo TA 3a2f8978-5dc0-11e8-9c2d-fa7ae01bbebc
# D/TC:? 0 tee_ta_init_pseudo_ta_session:297 Open system.pta
# D/TC:? 0 tee_ta_init_pseudo_ta_session:311 system.pta : 3a2f8978-5dc0-11e8-9c2d-fa7ae01bbebc
# D/TC:? 0 system_open_ta_binary:257 Lookup user TA ELF 8aaaf200-2450-11e4-abe2-0002a5d5c51b (Secure Storage TA)
# D/TC:? 0 system_open_ta_binary:260 res=0xffff0008
# D/TC:? 0 system_open_ta_binary:257 Lookup user TA ELF 8aaaf200-2450-11e4-abe2-0002a5d5c51b (REE)
# D/TC:? 0 system_open_ta_binary:260 res=0x0
# D/LD:  ldelf:169 ELF (8aaaf200-2450-11e4-abe2-0002a5d5c51b) at 0x40036000
# D/TC:? 0 tee_ta_close_session:499 csess 0x10178330 id 1
# D/TC:? 0 tee_ta_close_session:518 Destroy session
# InvokingD/TC:? 0 tee_ta_close_session:499 csess 0x10178b30 id 1
#  TA to iD/TC:? 0 tee_ta_close_session:518 Destroy session
# ncrementD/TC:? 0 destroy_context:298 Destroy TA ctx (0x10178ad0)
#  42
# TA incremented value to 43
类似的测试命令还有：
optee_example_acipher
optee_example_aes
optee_example_htop
optee_example_random
optee_example_secure_storage
通过ps aux | grep tee-supplicant命令查看tee-supplicant是否加载
